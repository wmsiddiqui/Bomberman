<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>walkDownSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CPU_init</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//best = [xgoal, ygoal, bestvalue(0-2), direction]
best[0] = x;
best[1] = y;
best[2] = 0;
best[3] = noone; 

mp_grid_add_instances(grid2, flame, false);
//mp_grid_add_instances(grid, cursePowerUp, false);



//check up
if(mp_grid_get_cell(grid, (x-16)/32 , (y-16)/32 - 1) == 0 &amp;&amp; best[2] &lt; 2)
{
    best[0] = x;
    best[1] = y-32;
    best[2] = 1;
    best[3] = 90;
    if(mp_grid_get_cell(grid2, (x-16)/32 , (y-16)/32 - 1) == 0)
    {
        best[2] = 2;
    }
}
//check down
if(mp_grid_get_cell(grid, (x-16)/32 , (y-16)/32 + 1) == 0 &amp;&amp; best[2] &lt; 2)
{
    best[0] = x;
    best[1] = y+32;
    best[2] = 1;
    best[3] = 270;
    if(mp_grid_get_cell(grid2, (x-16)/32 , (y-16)/32 + 1) == 0)
    {
        best[2] = 2;
    }
}
//check right
if(mp_grid_get_cell(grid, (x-16)/32 + 1 , (y-16)/32) == 0 &amp;&amp; best[2] &lt; 2)
{
    //game_restart();
    best[0] = x+32;
    best[1] = y;
    best[2] = 1;
    best[3] = 0;
    if(mp_grid_get_cell(grid2, (x-16)/32 + 1, (y-16)/32) == 0)
    {
        best[2] = 2;
    }
}
if(mp_grid_get_cell(grid, (x-16)/32 - 1 , (y-16)/32) == 0 &amp;&amp; best[2] &lt; 2)
{
    //game_restart();
    best[0] = x - 32;
    best[1] = y;
    best[2] = 1;
    best[3] = 180;
    if(mp_grid_get_cell(grid2, (x-16)/32 - 1, (y-16)/32) == 0)
    {
        best[2] = 2;
    }
}
if(best[2] == 0)
{
    instance_change(CPU_init_easy, true);
}

if(best[3] == 0)
{
    sprite_index = walkRightSpr;
}
else if(best[3] == 90)
{
    sprite_index = walkUpSpr;
}
else if(best[3] == 180)
{
    sprite_index = walkLeftSpr;
}
else if(best[3] == 270)
{
    sprite_index = walkDownSpr;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///simplified AI
if(best[3] == 0)
{
    sprite_index = walkRightSpr;
}
else if(best[3] == 90)
{
    sprite_index = walkUpSpr;
}
else if(best[3] == 180)
{
    sprite_index = walkLeftSpr;
}
else if(best[3] == 270)
{
    sprite_index = walkDownSpr;
}

image_speed = 0.18;
move_contact_solid(best[3],move_speed);
if  (x == best[0] &amp;&amp; y == best[1]||
    (dir == 0 &amp;&amp; x &gt; xgoal &amp;&amp; y == ygoal)||
    (dir == 90 &amp;&amp; x == xgoal &amp;&amp; y &lt; ygoal)||
    (dir == 180 &amp;&amp; x &lt; xgoal &amp;&amp; y == ygoal)||
    (dir == 270 &amp;&amp; x == xgoal &amp;&amp; y &gt; ygoal))
{
    
    //image_speed = 0;
    //image_index = 1;
    dir = best[3];
    instance_change(CPU_init_easy, true);
}
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*    
    if(mp_grid_get_cell(grid2, (x-16)/32 , (y-16)/32 - 1) == 0 &amp;&amp; mp_grid_get_cell(grid2, (x-16)/32, (y-16)/32) == -1)
    {   
        //goaly =  y - 32;
       // goalx = x - 16;
      //  goalx = x;
      //  goaly = y-32; 
        //sprite_index = walkUpSpr;
        image_speed = 0.18;
    }
    /*else if(mp_grid_get_cell(grid, (x-16)/32 , (y-16)/32 + 1) == 0 &amp;&amp; mp_grid_get_cell(grid, (x-16)/32, (y-16)/32) == -1)
    {   
        goalx = x;
        goaly = y+18;
        //sprite_index = walkDownSpr;
        image_speed = 0.18;
    }
    else if(mp_grid_get_cell(grid, x/32 - 1, y/32) == 0)
    {   
     //   goalx = x-32;
       // goaly = y; 
        //sprite_index = walkLeftSpr;
        image_speed = 0.18;
    }
    else if(mp_grid_get_cell(grid, x/32 + 1, y/32) == 0)
    {   
     //   goalx = x+32;
        //sprite_index = walkRightSpr;
        image_speed = 0.18;
    }
    
    path_clear_points(path);
    path = path_add();
    //mp_potential_path(path, xbegin, ybegin -33, move_speed, 2, 0);
    mp_grid_path(grid, path, xbegin, ybegin, xbegin, ybegin-32, 0);
    path_start(path, move_speed, 0, 0);
    //mp_linear_step(xbegin, ybegin - 33, move_speed, false);
    //sprite_index = CPUup;
    //show_debug_message( mp_potential_step(goalx, goaly, move_speed, false));
    if( mp_grid_get_cell(grid, (x-16)/32, (y-16)/32) == 0 &amp;&amp; (y - 16)%32 &gt; 16)
    {
        image_speed = 0;
        image_index = 1;
        instance_change(CPU_base, false);
    }
    /*
    if(direction == 90)
    {
        sprite_index = walkUpSpr;
    }
    else if(direction == 0)
    {
        sprite_index = walkUpSpr;
    }
    else if(direction == 180)
    {
        sprite_index = walkLeftSpr;
    }
    else if(direction == 270)
    {
        sprite_index = walkDownSpr;
    }
    /*
   if (mp_grid_get_cell(CPU_base.grid, x/32, y/32 - 1) == 0 &amp;&amp; mp_grid_get_cell(CPU_base.grid, x/32, y/32 - 2) ==0)
    {
        instance_change(CPU_base, false);   
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,48</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
