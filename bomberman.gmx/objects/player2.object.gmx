<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>walkDownSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = walkDownSpr;
image_speed = 0;
max_bomb = 1;
bomb_count = 0;
bomb_range = 2;
move_speed = 4;
kickable = false;
up = vk_up;
cursed = false;
remote = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_blend == c_gray)
{
    image_blend = c_white;
}
else
{
    image_blend = c_gray;
}
curse_cycle--;
if(curse_cycle &lt;= 0)
{
    move_speed = original_move_speed;
    max_bomb = original_max_bomb;
    image_blend = c_white;
    cursed = false;
}
else
{
    alarm[1] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
{
    var dx = 0;
    var dy = 0;
    var DEAD_ZONE = 0.3;
    var clip = 20;
    var cNum = 1;
    
    var controller_x = gamepad_axis_value( cNum, gp_axislh );
    var controller_y = gamepad_axis_value( cNum, gp_axislv );
    
    //moving left
    if( keyboard_check( vk_left ) || (controller_x &lt; -DEAD_ZONE &amp;&amp; abs(controller_x) &gt; abs(controller_y )))
    {
        dx = -1;
    }

    //moving right
    else if( keyboard_check( vk_right ) || (controller_x &gt; DEAD_ZONE &amp;&amp; abs(controller_x) &gt; abs(controller_y )))
    {
        dx = 1;
    }

    //moving up
    else if( keyboard_check( up ) || (controller_y &lt; -DEAD_ZONE &amp;&amp; abs(controller_x) &lt; abs(controller_y )))
    {
        dy = -1;
    }
    
    //moving down
    else if( keyboard_check( vk_down ) ||  (controller_y &gt; DEAD_ZONE &amp;&amp; abs(controller_x) &lt; abs(controller_y )))
    {
        dy = 1;
    }

    
    //character animation
    if( ( dx == 0 ) &amp;&amp; ( dy == 0 ) )    //stand still
    {
        image_speed = 0;
        image_index = 1;
    }
    else                                //move animation
    {
        image_speed = 0.18;
    }
    
    dx *= move_speed;                   //set speed
    dy *= move_speed;
 
    
    
    //move horizontally  
    if( dx &lt; 0)
    {
        if(place_meeting(x-1,y,wall))                       //go around corners
        {
            var cWall = instance_place(x-1, y, wall);
            if(!place_meeting(x-1,y-clip,cWall))            //clip block moving left
            {
                y-=2;
            }
            else if(!place_meeting(x-1,y+clip,cWall))
            {
                y+=2;
            }
        }
        move_contact_solid( 180, -dx );
        sprite_index = walkLeftSpr;
        
        //kick
        var selectBomb = instance_place(x-4, y-4, bomb);
        if(selectBomb != noone &amp;&amp; selectBomb.solid &amp;&amp; kickable == true)    //kick bombs
        {
            with (selectBomb)
            {
                direction = 180;
                kicked = true;
            }
        }
        //kick end
    }
    
    else if ( dx &gt; 0) 
    {
        if(place_meeting(x+1,y,wall))
        {
            var cWall = instance_place(x+1, y, wall);
            if(!place_meeting(x+1,y-clip,cWall))   //clip block moving right
            {
                y-=2;
            }
            else if(!place_meeting(x+1,y+clip,cWall))
            {
                y+=2;
            }
        }
        sprite_index = walkRightSpr;
        move_contact_solid( 0, dx );
        
        //kick
        var selectBomb = instance_place(x+4, y+4, bomb);
        if(selectBomb != noone &amp;&amp; selectBomb.solid &amp;&amp; kickable == true)        //kick bombs
        {      
            with (selectBomb)
            {
                direction = 0;
                kicked = true;
            }
        }
        //kick end
    }
    
    //move vertically  
    else if( dy &lt; 0)
    {
        if(place_meeting(x,y-1,wall))
        {
            var cWall = instance_place(x, y-1, wall);
            if(!place_meeting(x-clip,y-1,cWall))   //clip block moving left
            {
                x-=2;
            }
            else if(!place_meeting(x+clip,y-1,cWall))
            {
                x+=2;
            }
        }
       sprite_index = walkUpSpr;
       move_contact_solid( 90, -dy );
       
       
        //kick
        var selectBomb = instance_place(x, y-1, bomb);
        if(selectBomb != noone &amp;&amp; selectBomb.solid &amp;&amp; kickable == true)        //kick bombs
        {
            with (selectBomb)
            {
                direction = 90;
                kicked = true;
            }
        }
        //kick end
    }
    else if ( dy &gt; 0) 
    {
        
        if(place_meeting(x,y+1,wall))
        {
            var cWall = instance_place(x, y+1, wall);
            if(!place_meeting(x-clip,y+1,cWall))   //clip block moving left
            {
                x-=2;
            }
            else if(!place_meeting(x+clip,y+1,cWall))
            {
                x+=2;
            }
        }
        sprite_index = walkDownSpr;
        move_contact_solid( 270, dy );
        
        var selectBomb = instance_place(x, y+1, bomb);
        if(selectBomb != noone &amp;&amp; selectBomb.solid &amp;&amp; kickable == true)        //kick bombs
        {
            with (selectBomb)
            {
                direction = 270;
                kicked = true;
            }
        }
        //kick end
    }

    //end movement functions
    if((keyboard_check_pressed(vk_lalt) || gamepad_button_check_pressed(cNum, gp_shoulderlb))&amp;&amp; remote == true)   //remote detonation
    {
        with(bomb)
        {
            if(playerNum == other.id)
            {
                alarm[0] = 1;
            }
        }
    }
    if((keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(cNum, gp_shoulderrb))&amp;&amp; bomb_count &lt; max_bomb)
    {
        var xsnap;
        var ysnap;

        if ((x-16)%32 &gt; 16)
        {
            xsnap = x-(x%32);
            //instance_create(x+32-xsnap,y-32, bomb);
        }
        else
        {
            xsnap = (x)-(x%32);
            //instance_create(x-xsnap,y-32, bomb);
        }
        if ((y+16)%32 &gt; 16)
        {
            ysnap = y+16-(y%32);
        }
        else
        {
            ysnap = (y+16)-(y%32);
        }
        if (instance_position(xsnap, ysnap-32, bomb) == noone)
        {
            var createdBomb = instance_create(xsnap,ysnap-16, bomb);
            createdBomb.range = self.bomb_range;
            createdBomb.playerNum = self.id;
            bomb_count++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="cursePowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    with(other)
    {
        instance_destroy();
    }
    if(cursed == false)
        {
        original_move_speed = move_speed;
        original_max_bomb = max_bomb;
        max_bomb = 0;
        move_speed = 2;
        cursed = true;
        alarm[1] = 4;
        image_blend = c_gray;
        curse_cycle = 100;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="speedPowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
audio_play_sound(pSound, 1, false);
if(move_speed &lt; 10)
    move_speed = move_speed + 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="kickPowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
audio_play_sound(pSound, 1, false);
kickable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="remotePowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
audio_play_sound(pSound, 1, false);

remote = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="rangePowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    with(other)
    {
        instance_destroy();
    }
    audio_play_sound(pSound, 1, false);
    if(bomb_range &lt; 10)
        bomb_range++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bombPowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
audio_play_sound(pSound, 1, false);
if (max_bomb &lt; 10)
    max_bomb++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="flame">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change(deadPlayer, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,48</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
